{"mappings":"AAAA,MAAMA,EAAaC,SAASC,cAAc,YAGpCC,EACJ,yGAEFC,iBACE,IACE,MAAMC,QAAsBC,MAN9B,0FAOQC,QAAuBD,MAAMH,GAE7BK,QAAkBH,EAAcI,OAKtC,GA6CJ,SAAgCC,EAAMC,GACpC,IACEC,aAAaC,QAAQF,EAAKG,KAAKC,UAAUL,G,CACzC,MAAOM,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,EAnDzCC,QAFyBZ,EAAeE,QAENW,OAAQ,WAErCZ,EAAUa,QAAQC,OAED,YADpBL,QAAQM,IAAI,2BAUlB,SAAgBb,IA0ChB,SAAiCC,GAC/B,IACE,MAAMD,EAAOE,aAAaY,QAAQb,GAClB,OAATD,GAA4BI,KAAKW,MAAMf,E,CAC9C,MAAOM,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,EA5C5BQ,CAAwB,UAAvC,MAUMC,EAASjB,EACZkB,KACC,EAACC,YACCA,EAAWC,cACXA,EAAaC,MACbA,EAAKC,KACLA,EAAIC,aACJA,EAAYC,eACZA,EAAcC,UACdA,KAEU,4FAA4FN,sFAC1DE,yBAA6BI,OAAeF,sBAI3FG,KAAK,IAERpC,EAAWqC,mBAAmB,YAAaV,E,CArCzCW,CAAO9B,EAAUa,Q,CACjB,MAAOL,GACPC,QAAQM,IAAIP,EAAO,sB,EAuDvBuB,GAaAtB,QAAQM,IANCjB,MADKH,yGAETqC,MAAKC,GAAYA,EAAShC,SAC1B+B,MAAK9B,GACGA,EAAKU","sources":["src/js/api/api.js"],"sourcesContent":["const galleryRef = document.querySelector('.gallery');\nconst URL_TRENDING_FILMS =\n  'https://api.themoviedb.org/3/trending/all/day?api_key=74cf07cbcff58397c32fe332f07646fa';\nconst URL_GENRES =\n  'https://api.themoviedb.org/3/genre/movie/list?api_key=74cf07cbcff58397c32fe332f07646fa&language=en-US';\n\nasync function getPopularFilms() {\n  try {\n    const responseFilms = await fetch(URL_TRENDING_FILMS);\n    const responseGenres = await fetch(URL_GENRES);\n    // debugger;\n    const dataFilms = await responseFilms.json();\n    const dataGenres = await responseGenres.json();\n    //console.log(dataFilms.results.length, dataGenres.genres.length);\n    saveDataToLocalStorage(dataGenres.genres, 'genres');\n\n    if (!dataFilms.results.length) {\n      console.log('Нет популярных фильмов');\n      return;\n    }\n\n    render(dataFilms.results);\n  } catch (error) {\n    console.log(error, 'Что-то пошло не так');\n  }\n}\n\nfunction render(data) {\n  //debugger;\n\n  const genres = getDataFromLocalStorage('genres');\n  // console.log(...genres);\n  // const idGeneres = genres.map(name => {\n  //   console.log(name.id);\n  //   return name.name;\n  // });\n  // console.log(idGeneres);\n\n  // _________________!!!!!\n\n  const markup = data\n    .map(\n      ({\n        poster_path,\n        backdrop_path,\n        title,\n        name,\n        release_date,\n        first_air_date,\n        genre_ids,\n      }) => {\n        let str = `<div class=\"photo-card\"><a class=\"link\" href=\"\"><img src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"\" loading=\"lazy\" /></a>\n           <div class=\"info\"><p class=\"film-name\">${title}</p><p class=\"genre\">${genre_ids} | ${release_date}</p></div></div>`;\n        return str;\n      }\n    )\n    .join('');\n  // console.log(markup);\n  galleryRef.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction saveDataToLocalStorage(data, key) {\n  try {\n    localStorage.setItem(key, JSON.stringify(data));\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n}\n\nfunction getDataFromLocalStorage(key) {\n  try {\n    const data = localStorage.getItem(key);\n    return data === null ? undefined : JSON.parse(data);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n}\n\ngetPopularFilms();\n\n//  _________________________________\n// фетч жанрів\n\nfunction fetchGenres() {\n  const url = URL_GENRES;\n  return fetch(url)\n    .then(response => response.json())\n    .then(data => {\n      return data.genres;\n    });\n}\nconsole.log(fetchGenres());\n\n// function insertGenresToMovieObj() {\n//   return this.fetchPopularArticles().then(data => {\n//     return this.fetchGenres().then(genresList => {\n//       return data.map(movie => ({\n//         ...movie,\n//         release_date: movie.release_date.split('-')[0],\n//         genres: movie.genre_ids\n//           .map(id => genresList.filter(el => el.id === id))\n//           .flat(),\n//       }));\n//     });\n//   });\n// }\n// console.log(insertGenresToMovieObj());\n"],"names":["$3149f71daf4d0855$var$galleryRef","document","querySelector","$3149f71daf4d0855$var$URL_GENRES","async","responseFilms","fetch","responseGenres","dataFilms","json","data","key","localStorage","setItem","JSON","stringify","error","console","message","$3149f71daf4d0855$var$saveDataToLocalStorage","genres","results","length","log","getItem","parse","$3149f71daf4d0855$var$getDataFromLocalStorage","markup","map","poster_path","backdrop_path","title","name","release_date","first_air_date","genre_ids","join","insertAdjacentHTML","$3149f71daf4d0855$var$render","$3149f71daf4d0855$var$getPopularFilms","then","response"],"version":3,"file":"index.259ffc15.js.map"}